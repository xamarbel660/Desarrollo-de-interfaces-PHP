version: "3.8"

services:
    db:
        image: mysql:8.0
        restart: unless-stopped
        ports: 
            - "127.0.0.1:${MYSQL_PORT}:3306"
        command: --default-authentication-plugin=mysql_native_password
        environment:
            MYSQL_DATABASE: ${MYSQL_DATABASE}
            MYSQL_USER: ${MYSQL_USER}
            MYSQL_PASSWORD: ${MYSQL_PASSWORD}
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
        volumes:
            - ./dump:/docker-entrypoint-initdb.d:ro
            - ./conf:/etc/mysql/conf.d:ro
            - persistent:/var/lib/mysql
        networks:
            - backend
        healthcheck:
            test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
            interval: 10s
            timeout: 5s
            retries: 5

    www:
        build: 
            context: .
            args:
                PHP_MEMORY_LIMIT: ${PHP_MEMORY_LIMIT}
                PHP_MAX_EXECUTION_TIME: ${PHP_MAX_EXECUTION_TIME}
                PHP_UPLOAD_MAX_FILESIZE: ${PHP_UPLOAD_MAX_FILESIZE}
                PHP_POST_MAX_SIZE: ${PHP_POST_MAX_SIZE}
        restart: unless-stopped
        environment:
            MYSQL_HOST: ${MYSQL_HOST}
            MYSQL_DATABASE: ${MYSQL_DATABASE}
            MYSQL_USER: ${MYSQL_USER}
            MYSQL_PASSWORD: ${MYSQL_PASSWORD}
        ports: 
            - "127.0.0.1:${APACHE_PORT}:80"
        volumes:
            - ./www:/var/www/html:ro
        depends_on:
            - db
        networks:
            - frontend
            - backend
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost"]
            interval: 10s
            timeout: 5s
            retries: 5

    phpmyadmin:
        image: phpmyadmin/phpmyadmin:latest
        restart: unless-stopped
        environment:
            PMA_HOST: ${PMA_HOST}
            PMA_USER: ${PMA_USER}
            PMA_PASSWORD: ${PMA_PASSWORD}
            UPLOAD_LIMIT: ${PHP_UPLOAD_MAX_FILESIZE}
        ports:
            - "127.0.0.1:${PHPMYADMIN_PORT}:80"
        depends_on:
            - db
        networks:
            - frontend
            - backend
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost"]
            interval: 10s
            timeout: 5s
            retries: 5

networks:
    frontend:
        driver: bridge
    backend:
        driver: bridge
        internal: true

volumes:
    persistent:
